1) zookeeper 실행 (Kafka 모니터링 도구)
     C:\dev\kafka_2.13-3.8.1\bin\windows\zookeeper-server-start.bat "C:\dev\kafka_2.13-3.8.1\config\zookeeper.properties"
2) kafka를 실행
     C:\dev\kafka_2.13-3.8.1\bin\windows\kafka-server-start.bat C:\dev\kafka_2.13-3.8.1\config\server.properties
3) MultiThreadedUDPServer 실행
4) KafkaWebSocketServer 실행

데이터베이스 예시
create table stock(
    trading_date date,
    trading_hours VARCHAR2(50), -- 거래시간
    symbol VARCHAR2(50), -- 종목코드
    price NUMBER(20,5), -- 체결가격
    volume NUMBER, -- 거래량
    cumulative_Volume NUMBER -- 누적거래량
);

알고리즘에 따른 주식 데이터 : 많이 구매한 상품 회사에 대한 주식 정보를 보여준다.
public List<StockA3> recommandStock(String memberNum){
		System.out.println("recommandStock");
		sql = "  SELECT S1.* , CASE WHEN SYMBOL = 'KR7005930003' THEN '삼성전자' "
				+ "                   ELSE '-' END STOCK_NAME   "
				+ "FROM ( "
				+ "    SELECT s.*, "
				+ "           ROW_NUMBER() OVER ( "
				+ "               PARTITION BY TO_CHAR(trading_date, 'yyyy-MM-dd'), trading_hours "
				+ "               ORDER BY TO_CHAR(trading_date, 'yyyy-MM-dd') DESC, trading_hours DESC, ROWID DESC "
				+ "           ) AS rn "
				+ "    FROM stock1 s "
				+ "    WHERE TRUNC(trading_date) = TRUNC(SYSDATE) "
				+ ")S1 "
				+ "WHERE rn = 1  "
				+ "and SYMBOL = (  "
				+ "SELECT CASE WHEN STOCK_NAME = '삼성전자' THEN 'KR7005930003' "
				+ "            ELSE '-' END STOCK_NAME  "
				+ "FROM GOODS "
				+ "WHERE GOODS_NUM = ( "
				+ "        SELECT GOODS_NUM FROM (     "
				+ "            SELECT PL.GOODS_NUM, CNT  "
				+ "            FROM purchase P JOIN (  "
				+ "                                SELECT * "
				+ "                                FROM ( "
				+ "                                      SELECT purchase_NUM,  goods_num, COUNT(*) OVER (PARTITION BY goods_num) AS cnt "
				+ "                                      FROM purchase_list "
				+ "                                      ) "
				+ "                               ) PL "
				+ "            ON P.purchase_NUM = PL.purchase_NUM AND P.MEMBER_NUM = ? "
				+ "            ORDER BY CNT DESC "
				+ "        ) "
				+ "        WHERE ROWNUM =1) "
				+ ")";
		return jdbcTemplate.query(sql
				, new BeanPropertyRowMapper<StockA3>(StockA3.class), memberNum);
	}
