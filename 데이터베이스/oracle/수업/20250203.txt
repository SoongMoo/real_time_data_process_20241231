select *  --- 모든 컬럼 가져오기
from hr.employees; --직원테이블

---- 직원테이블에서 사원번호, 성, 입사일 , 직무번호을 프로젝션하여 출력하시오.
SELECT employee_id, last_name, hire_date, job_id
FROM HR.EMPLOYEES;

--- 테이블 정보
DESCRIBE hr.employees;
desc hr.employees;

-- 출력할 때는 컬럼 순서는 상관없다.
-- 직원테이블에서 급여, 성, 직무번호, 입사일를 출력하세요.

select salary , last_name,  job_id, hire_date --- 컬럼을 무작위로 나열할 수 있다.
from hr.employees;

desc hr.departments;

select department_id, location_id
from hr.departments;

-- 대소문자를 구분하지 않습니다
---  부서테이블에서 부서번호, 직역번호를 출력하시오,
select DEPARTMENT_ID, location_id
from hr.departments;

select * from dba_tables where owner = 'HR'; 
select * from dba_tables where owner = 'HR' and table_name = 'DEPARTMENTS';

--- 한 줄 또는 여러 줄에 입력할 수 있습니다.
--- 직원테이블 에서 직원번호, 이름, 입사일, 직무번호, 급여 , 직속상사, 부서번호 
DESC HR.EMPLOYEES;
SELECT  employee_id, first_name , hire_date 
       ,job_id, salary
       , manager_id, department_id  -- 가독성을 높이기 위해 들여쓰기를 사용합니다
from hr.employees;

--- 절은 별도의 줄에 입력합니다.
-- 부서 테이블에서 부서번호 , 부서명을 출력하시오
desc hr.departments;
select department_id, DEPARTMENT_NAME from hr.departments;
select department_id, DEPARTMENT_NAME 
from hr.departments;

---- 산술식 (expression)
--- 직원테이블에서 직원번호, 이름, 급여 , 년봉
select employee_id, first_name, salary , salary * 12  
from hr.employees; 

--- 직원테이블에서 직원번호, 성, 입사일, 직무번호, 급여, 매월 100씩 추가로 더해진 급여의 연봉을 출력
select employee_id, last_name, hire_date, job_id, salary,  12 * salary + 100
from hr.employees;

select employee_id, last_name, hire_date, job_id, salary,  12 * (salary + 100)
from hr.employees;

--- 직원 테이블에서 직원번호, 성, 직무번호, 급여,  커미션퍼센트(commission_pct)을 출력
select employee_id, last_name, job_id, salary, commission_pct
from hr.employees;

-- null : 알수 없는 값 ,  값이 없다가 아님
--- 직원테이블에서 직원번호, 이름, 입사일, 급여, 커미션퍼센트, 급여당 커미션을 출력
select employee_id, first_name, hire_date
      ,salary, commission_pct, salary * commission_pct 
from hr.employees;


select 100 + null
from dual;

---  사원번호, 이름, 성, 급여, 커미션, 커미션을 포함한 년봉도 같이 출력하시오.
select employee_id, first_name, last_name, salary , commission_pct 
       , salary * ( 1 + commission_pct) * 12
from hr.employees;

--- alias : heading name 변경하기
select employee_id, first_name, last_name, salary , commission_pct 
       , salary * ( 1 + commission_pct) * 12 as year_sal -- heading name 변경하기
from hr.employees;

select employee_id as eid , first_name , last_name as lid
      , salary as sal , commission_pct  comm 
      , salary * ( 1 + commission_pct) * 12 as year_sal
from hr.employees;

-- 대소문자로 heading name 출력
select employee_id as eid , first_name , last_name as lid
      , salary as sal , commission_pct  comm 
      , salary * ( 1 + commission_pct) * 12 as "Year_Sal" --- x
      , salary * ( 1 + commission_pct) * 12 as "Year Sal" --- x
from hr.employees;

/* 별칭에 공백문자가 있어서 오류 : ""을 해줘야 한다.
select employee_id, first_name, last_name, salary , commission_pct comm
      , salary  * ( 1 + commission_pct ) * 12 Year Sal
from hr.employees;
*/

--- 연결 연산자 : ||
--- 직원테이블에서 직원번호 , 성이름, 입사일 , 급여, 직무번호
select employee_id , last_name || first_name, hire_date, salary, job_id
from hr.employees;

-- 리터널 : 자연어, 자연수
--- 문자열 리터널 : 자연어 
select employee_id , last_name || ' ' || first_name, hire_date, salary, job_id
from hr.employees;

---  100의 이름은 King이고 직무는 AD_PRES입니다.(이러한 형식으로 모든 행 출력)
select  employee_id, '의 이름은 ', last_name , '이고 직무는 ', job_id , '입니다.'
from hr.employees;

select  employee_id || '의 이름은 ' || last_name || '이고 직무는 ' || job_id || '입니다.'
from hr.employees;

select last_name, '1달 월급 = ', salary
from hr.employees;
-- king 1달 월급 = 24000
select last_name ||  '1달 월급 = ' || salary
from hr.employees;

select department_name , ' department''s manager_id ' , manager_id
from hr.departments;

-- Administration department's manager_id 200
select department_name || ' department''s manager_id ' || manager_id
from hr.departments;

-- q키워드 사용
select department_name , q'[ department's manager_id ]' , manager_id
from hr.departments;

select employee_id, department_id 
from hr.employees;

-- 중복 행 제거
--  사원들이 속해있는 부서가 어떤 부서들이 있는지 부서를 한번만 출력하시오,
select DISTINCT department_id
from hr.employees;

--- 직원테이블에서 부서번호, 직무번호를 출력
select department_id, job_id
from hr.employees;

-- 각부서의 직무들을 한번만 출력
/*
select  department_id, distinct job_id
from hr.employees;
*/
select distinct department_id,  job_id
from hr.employees;

--- 직원테이블에서 성, 직무번호, 부서번호를 출력할 때 중복 행은 제거
select distinct last_name, job_id, department_id
from hr.employees;

--- 원하는 컬럼(열)을 출력 : projection
--- 원하는 레코드(행)을 출력 : selection : where절이 필요 
select *
from hr.employees
where employee_id = 100; -- selection

select * from hr.employees
where EMPLOYEE_ID = 100;

--  성이 King인 사원을 모두 출력
select * from hr.employees
where last_name = 'King';

select * from hr.employees
where last_name = 'king'; -- 저장된 데이터에 대해서는 대소문자를 구분한다.

select * from hr.employees
where last_name = 'KING'; -- 대소문자를 구분하므로 출력되지 않는다.

-- 직무번호가 'FI_ACCOUNT'인 사원들의 사원번호, 이름 , 급여, 직무번호를 출력하세요.
SELECT * FROM HR.JOBS
WHERE JOB_ID = 'FI_ACCOUNT';

SELECT EMPLOYEE_ID, FIRST_NAME, SALARY, JOB_ID
FROM HR.EMPLOYEES
WHERE JOB_ID = 'FI_ACCOUNT';

--- 특정 입사일 출력 '03/06/17' => 'YY/MM/DD' , YY-MM-DD, YY.MM.DD , YYYY-MM-DD
SELECT * FROM HR.EMPLOYEES;
SELECT * FROM HR.EMPLOYEES WHERE HIRE_DATE = '03/06/17';
SELECT * FROM HR.EMPLOYEES WHERE HIRE_DATE = '03-06-17';
SELECT * FROM HR.EMPLOYEES WHERE HIRE_DATE = '03.06.17'; --- 1999
SELECT * FROM HR.EMPLOYEES WHERE HIRE_DATE = '2003.06.17';

---  20  25 02 03 14 45 30
--- 세기 년  월 일  시 분  초
--- 00 ~ 49 년 : 2000 ~2049
--  50 ~ 99 년 : 1950 ~ 1999
DESC HR.EMPLOYEES;

-- 사장보다 먼저 입사한 직원들은 
SELECT * FROM HR.EMPLOYEES WHERE EMPLOYEE_ID = 100;
SELECT * FROM HR.EMPLOYEES WHERE HIRE_DATE < '03/06/17';

--- 급여가 3000달러 이상인 사원을 출력하세요.
SELECT * FROM HR.EMPLOYEES WHERE SALARY >= 3000;

-- 사원번호 ,성, 급여, 직무번호를 출력하는 데 급여의 열이름을 sal로 한다.
-- 이때 급여가 3000이상인 사원을 출력하시오.
select employee_id, last_name, salary as sal , job_id 
from hr.employees      --- 1
WHERE SALARY >= 3000;  --- 2  where 절에는 별칭을 사용할 수 없다.

--- 급여가 2500부터 3000사이에 있는 직원 이름과 급여를 출력하시오
SELECT FIRST_NAME, SALARY
FROM HR.EMPLOYEES
WHERE SALARY >= 2500 AND SALARY <= 3000;

SELECT FIRST_NAME, SALARY
FROM HR.EMPLOYEES
WHERE SALARY BETWEEN 2500 AND 3000;

-- 50, 70, 90인 부서의 직원을 하시오.
SELECT * FROM HR.EMPLOYEES WHERE DEPARTMENT_ID = 50;
SELECT * FROM HR.EMPLOYEES WHERE DEPARTMENT_ID = 70;
SELECT * FROM HR.EMPLOYEES WHERE DEPARTMENT_ID = 90;

SELECT * FROM HR.EMPLOYEES 
WHERE DEPARTMENT_ID = 50 OR DEPARTMENT_ID = 70 OR DEPARTMENT_ID = 90;

SELECT * FROM HR.EMPLOYEES 
WHERE DEPARTMENT_ID IN (50, 70, 90);

-- 직원이름이 'Vance'인직원과 90인 부서의 직원을 출력하시오,
SELECT * FROM HR.EMPLOYEES WHERE FIRST_NAME = 'Vance';
SELECT * FROM HR.EMPLOYEES WHERE DEPARTMENT_ID = 90;
SELECT * FROM HR.EMPLOYEES WHERE FIRST_NAME = 'Vance' OR DEPARTMENT_ID = 90;

--성이름이 'Hartstein', 'Vargas' 인 사원들을 출력하시오.
select * from hr.employees
where last_name in ('Hartstein', 'Vargas');
// where last_name = 'Hartstein' or last_name= 'Vargas'
--  100, 101, 201인 상사(manager_id)를 둔 직원들을 모두 출력하시오.
select * from hr.employees where manager_id in (100, 101, 201);






















