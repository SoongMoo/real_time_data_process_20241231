-- 직원
CREATE TABLE EMPLOYEES (
	emp_num VARCHAR(50) NOT NULL,
	emp_id VARCHAR(50) NULL,
	emp_pw VARCHAR(255) NULL,
	emp_name VARCHAR(50) NULL,
	emp_addr VARCHAR(255) NULL,
	emp_addr_detail VARCHAR(255) NULL,
	emp_post INTEGER NULL,
	emp_phone VARCHAR(30) NULL,
	emp_jumin VARCHAR(13) NULL,
	emp_email VARCHAR(40) NULL,
	emp_hire_date DATE NULL,
	emp_image VARCHAR(255) NULL
);
-- 상품
CREATE TABLE GOODS (
	goods_num VARCHAR(50) NOT NULL,
	goods_name VARCHAR(50) NULL,
	goods_price INTEGER NULL,
	goods_contents VARCHAR(2000) NULL,
	visit_count INTEGER NULL,
	goods_main_image VARCHAR(255) NULL,
	goods_main_store_image VARCHAR(255) NULL,
	goods_detail_image VARCHAR(2000) NULL,
	goods_detail_store_image VARCHAR(2000) NULL,
	emp_num VARCHAR(50) NULL,
	goods_regist DATE NULL,
	update_emp_num VARCHAR(50) NULL,
	goods_update_date DATE NULL
);
-- 입고
CREATE TABLE GOODS_IPGO (
	goods_num VARCHAR(50) NOT NULL,
	ipgo_num VARCHAR(50) NOT NULL,
	ipgo_qty INTEGER NULL,
	ipgo_date DATE NULL,
	made_date DATE NULL,
	ipgo_price INTEGER NULL,
	emp_num VARCHAR(50) NULL
);

-- 회원
CREATE TABLE MEMBERS (
	MEMBER_NUM VARCHAR(50) NOT NULL,
	MEMBER_NAME VARCHAR(50) NULL,
	MEMBER_ID VARCHAR(50) NULL,
	MEMBER_PW VARCHAR(255) NULL,
	MEMBER_ADDR VARCHAR(255) NULL,
	MEMBER_ADDR_DETAIL VARCHAR(255) NULL,
	MEMBER_POST INTEGER NULL,
	MEMBER_REGIST DATE NULL,
	GENDER CHAR(1) NULL,
	MEMBER_PHONE1 VARCHAR(30) NULL,
	MEMBER_PHONE2 VARCHAR(30) NULL,
	MEMBER_EMAIL VARCHAR(40) NULL,
	MEMBER_BIRTH DATE NULL,
	MEMBER_POINT INTEGER NULL,
	MEMBER_EMAIL_CONF CHAR(1) NULL
);
-- 주문
CREATE TABLE PURCHASE (
	PURCHASE_NUM VARCHAR(50) NOT NULL,
	PURCHASE_DATE DATE NULL,
	PURCHASE_PRICE INTEGER NULL,
	DELIVERY_ADDR VARCHAR(255) NULL,
	DELIVERY_ADDR_DETAIL VARCHAR(255) NULL,
	DELIVERY_POST INTEGER NULL,
	DELIVERY_PHONE VARCHAR(30) NULL,
	MESSAGE VARCHAR(255) NULL,
	PURCHASE_STATUS VARCHAR(50) NULL,
	MEMBER_NUM VARCHAR(50) NULL
);
-- 주문상품
CREATE TABLE PURCHASE_LIST (
	goods_num VARCHAR(50) NOT NULL,
	PURCHASE_NUM VARCHAR(50) NOT NULL,
	PURCHASE_QTY INTEGER NULL,
	GOODS_UNIT_PRICE INTEGER NULL
);
-- 후기
CREATE TABLE REVIEWS (
	REVIEW_NUM INTEGER NOT NULL,
	goods_num VARCHAR(50) NOT NULL,
	PURCHASE_NUM VARCHAR(50) NOT NULL,
	REVIEW_DATE DATE NULL,
	REVIEW_CONTENTS VARCHAR(2000) NULL,
	MEMBER_ID VARCHAR(50) NULL
);

-- 장바구니
CREATE TABLE CART (
	MEMBER_NUM VARCHAR(50) NOT NULL,
	goods_num VARCHAR(50) NOT NULL,
	CART_DATE DATE NULL,
	CART_QTY INTEGER NULL
);
-- 관심상품
CREATE TABLE WISH (
	MEMBER_NUM VARCHAR(50) NOT NULL,
	goods_num VARCHAR(50) NOT NULL,
	WISH_DATE DATE NULL
);
-- 결제
CREATE TABLE PAYMENT (
	PURCHASE_NUM VARCHAR(50) NOT NULL,
	CONFIRMNUMBER VARCHAR(50) NULL,
	CARDNUM VARCHAR(50) NULL,
	TID VARCHAR(50) NULL,
	TOTALPRICE INTEGER NULL,
	RESULTMASSAGE VARCHAR(2000) NULL,
	PAYMATHOD VARCHAR(50) NULL,
	APPLDATE VARCHAR(50) NULL,
	APPTIME VARCHAR(50) NULL
);
-- 배송
CREATE TABLE DELIVERY (
	PURCHASE_NUM VARCHAR(50) NOT NULL,
	DELIVERY_NUM VARCHAR(50) NULL,
	DELIVERY_DATE DATE NULL,
	DELIVERY_STATUS VARCHAR(50) NULL
);
-- 문의
CREATE TABLE INQUIRE (
	INQUIRE_NUM INTEGER NOT NULL,
	MEMBER_NUM VARCHAR(50) NOT NULL,
	goods_num VARCHAR(50) NOT NULL,
	INQUIRE_SUBJECT VARCHAR(255) NULL,
	INQUIRE_CONTENTS VARCHAR(2000) NULL,
	INQUIRE_KIND VARCHAR(50) NULL,
	INQUIRE_DATE DATE NULL,
	INQUIRE_ANSWER VARCHAR(2000) NULL,
	INQUIRE_ANSWER_DATE DATE NULL,
	emp_num VARCHAR(50) NULL
);

--------------------------------------------------------------------------------
--- primary key
-- 직원
alter table employees   --- table 레벨
add constraint pk_employees primary key(emp_num);

-- 상품
ALTER TABLE GOODS
	ADD CONSTRAINT PK_GOODS -- 상품 기본키
	PRIMARY KEY (
	goods_num -- 상품번호
	);

-- 입고
ALTER TABLE GOODS_IPGO
	ADD CONSTRAINT PK_GOODS_IPGO -- 입고 기본키
	PRIMARY KEY (
	goods_num, -- 상품번호
	ipgo_num   -- 입고번호
	);

-- 회원
ALTER TABLE MEMBERS
	ADD CONSTRAINT PK_MEMBERS -- 회원 기본키
	PRIMARY KEY (
	MEMBER_NUM -- 회원번호
	);
-- 주문
ALTER TABLE PURCHASE
	ADD CONSTRAINT PK_PURCHASE -- 주문 기본키
	PRIMARY KEY (
	PURCHASE_NUM -- 주문번호
	);

-- 주문상품
ALTER TABLE PURCHASE_LIST
	ADD CONSTRAINT PK_PURCHASE_LIST -- 주문상품 기본키
	PRIMARY KEY (
	goods_num,    -- 상품번호
	PURCHASE_NUM  -- 주문번호
	);

-- 후기
ALTER TABLE REVIEWS
	ADD CONSTRAINT PK_REVIEWS -- 후기 기본키
	PRIMARY KEY (
	REVIEW_NUM,   -- 후기번호
	goods_num,    -- 상품번호
	PURCHASE_NUM  -- 주문번호
	);


-- 장바구니
ALTER TABLE CART
	ADD CONSTRAINT PK_CART -- 장바구니 기본키
	PRIMARY KEY (
	MEMBER_NUM, -- 회원번호
	goods_num   -- 상품번호
	);


-- 관심상품
ALTER TABLE WISH
	ADD CONSTRAINT PK_WISH -- 관심상품 기본키
	PRIMARY KEY (
	MEMBER_NUM, -- 회원번호
	goods_num   -- 상품번호
	);



-- 결제
ALTER TABLE PAYMENT
	ADD CONSTRAINT PK_PAYMENT -- 결제 기본키
	PRIMARY KEY (
	PURCHASE_NUM -- 주문번호
	);


-- 배송
ALTER TABLE DELIVERY
	ADD CONSTRAINT PK_DELIVERY -- 배송 기본키
	PRIMARY KEY (
	PURCHASE_NUM -- 주문번호
	);

--문의
alter table INQUIRE
drop constraint pk_INQUIRE;

alter table  INQUIRE
add constraint pk_INQUIRE primary key(INQUIRE_NUM, MEMBER_NUM, goods_num);

--------------------------------------------------------------------------------

alter table goods
drop constraint fk_employees_to_goods_emp_num;
alter table goods
drop constraint fk_employees_to_goods_update_emp_num;


--상품
alter table goods
add (constraint fk_employees_to_goods_emp_num  --- 직원->상품  
    foreign key(emp_num ) --- 등록 직원 번호
    REFERENCES  employees (emp_num) 
    on delete set null,

    constraint fk_employees_to_goods_update_emp_num 
    foreign key (update_emp_num) --- 수정 직원 번호
    REFERENCES employees(emp_num) --- 직원 테이블의 직원번호를 참조 
    on delete set null 
);


alter table goods_ipgo
drop constraint fk_employees_to_goods_ipgo;
alter table goods_ipgo
drop constraint fk_goods_to_goods_ipgo;

alter table goods_ipgo
add constraint fk_employees_to_goods_ipgo
    foreign key (emp_num) --- 직원 번호
    REFERENCES employees(emp_num) -- 직원의 직원번호 참조
    on delete set null;  -- 비식별자
    
alter table goods_ipgo
add constraint fk_goods_to_goods_ipgo
    foreign key (goods_num)   --- 상품 번호
    REFERENCES goods(goods_num) ; --- 상품에 상품번호를 참조
    -- 주식별자이지만 on delete cascade를 사용하지 않음.
    -- 상품이 삭제될 때 입고가 삭제되서는 안되므로

alter table reviews
drop constraint fk_purchase_list_to_reviews;

alter table reviews
add constraint fk_purchase_list_to_reviews
    foreign key(goods_num, purchase_num)
    REFERENCES purchase_list(goods_num, purchase_num)
    on delete CASCADE;   -- 주식별자

-- 문의
ALTER TABLE INQUIRE
	ADD CONSTRAINT FK_MEMBERS_TO_INQUIRE -- 회원 -> 문의
	FOREIGN KEY (
	MEMBER_NUM -- 회원번호
	)
	REFERENCES MEMBERS ( -- 회원
	MEMBER_NUM -- 회원번호
	) on delete cascade;

-- 문의
ALTER TABLE INQUIRE
	ADD CONSTRAINT FK_GOODS_TO_INQUIRE -- 상품 -> 문의
	FOREIGN KEY (
	goods_num -- 상품번호
	)
	REFERENCES GOODS ( -- 상품
	goods_num -- 상품번호
	) on delete cascade;

-- 문의
ALTER TABLE INQUIRE
	ADD CONSTRAINT FK_EMPLOYEES_TO_INQUIRE -- 직원 -> 문의
	FOREIGN KEY (
	emp_num -- 직원번호
	)
	REFERENCES EMPLOYEES ( -- 직원
	emp_num -- 직원번호
	) on delete set null;

-- 배송
ALTER TABLE DELIVERY
	ADD CONSTRAINT FK_PURCHASE_TO_DELIVERY -- 주문 -> 배송
	FOREIGN KEY (
	PURCHASE_NUM -- 주문번호
	)
	REFERENCES PURCHASE ( -- 주문
	PURCHASE_NUM -- 주문번호
	) ;

-- 결제
ALTER TABLE PAYMENT
	ADD CONSTRAINT FK_PURCHASE_TO_PAYMENT -- 주문 -> 결제
	FOREIGN KEY (
	PURCHASE_NUM -- 주문번호
	)
	REFERENCES PURCHASE ( -- 주문
	PURCHASE_NUM -- 주문번호
	);

-- 관심상품
ALTER TABLE WISH
	ADD CONSTRAINT FK_GOODS_TO_WISH -- 상품 -> 관심상품
	FOREIGN KEY (
	goods_num -- 상품번호
	)
	REFERENCES GOODS ( -- 상품
	goods_num -- 상품번호
	) on delete cascade;

-- 관심상품
ALTER TABLE WISH
	ADD CONSTRAINT FK_MEMBERS_TO_WISH -- 회원 -> 관심상품
	FOREIGN KEY (
	MEMBER_NUM -- 회원번호
	)
	REFERENCES MEMBERS ( -- 회원
	MEMBER_NUM -- 회원번호
	) on delete cascade;

-- 장바구니
ALTER TABLE CART
	ADD CONSTRAINT FK_GOODS_TO_CART -- 상품 -> 장바구니
	FOREIGN KEY (
	goods_num -- 상품번호
	)
	REFERENCES GOODS ( -- 상품
	goods_num -- 상품번호
	) on delete cascade;

-- 장바구니
ALTER TABLE CART
	ADD CONSTRAINT FK_MEMBERS_TO_CART -- 회원 -> 장바구니
	FOREIGN KEY (
	MEMBER_NUM -- 회원번호
	)
	REFERENCES MEMBERS ( -- 회원
	MEMBER_NUM -- 회원번호
	) on delete cascade;

ALTER TABLE PURCHASE_LIST
	ADD CONSTRAINT FK_GOODS_TO_PURCHASE_LIST -- 상품 -> 주문상품
	FOREIGN KEY (
	goods_num -- 상품번호
	)
	REFERENCES GOODS ( -- 상품
	goods_num -- 상품번호
	);  

-- 주문
ALTER TABLE PURCHASE
	ADD CONSTRAINT FK_MEMBERS_TO_PURCHASE -- 회원 -> 주문
	FOREIGN KEY (
	MEMBER_NUM -- 회원번호
	)
	REFERENCES MEMBERS ( -- 회원
	MEMBER_NUM -- 회원번호
	) on delete set null;
